{"version":3,"sources":["../node_modules/rsuite/es/HelpBlock/HelpBlock.js","../node_modules/rsuite/es/HelpBlock/index.js","component/setting/index.tsx","container/setting/index.tsx","actions/setting.ts"],"names":["HelpBlock","_React$Component","apply","this","arguments","_inheritsLoose","prototype","render","_classNames","_this$props","props","className","tooltip","children","classPrefix","_objectWithoutPropertiesLoose","addPrefix","prefix","classes","classNames","React","Whisper","placement","speaker","Tooltip","_extends","Icon","icon","propTypes","PropTypes","string","bool","node","defaultProps","Setting","handleSubmit","e","persist","setState","showError","state","oldPassword","newPassword","length","Alert","error","NEW_PASSWORD_LENGTH_VALID","repeat","onSubmit","REPEAT_PASSWORD_NOT_MATCH","NEW_PASSWORD_EMPTY","OLD_PASSWORD_EMPTY","id","Nav","activeKey","appearance","Item","eventKey","key","Form","layout","FormGroup","ControlLabel","FormControl","name","type","onChange","trim","ButtonToolbar","Button","onClick","bind","Component","withRouter","connect","errorMsg","ErrorMsg","dispatch","CHANGE_PASSWORD","changePassword"],"mappings":"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","file":"static/js/12.c12a3bf9.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Tooltip from '../Tooltip';\nimport Whisper from '../Whisper';\nimport Icon from '../Icon';\nimport { defaultProps, prefix } from '../utils';\n\nvar HelpBlock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(HelpBlock, _React$Component);\n\n  function HelpBlock() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = HelpBlock.prototype;\n\n  _proto.render = function render() {\n    var _classNames;\n\n    var _this$props = this.props,\n        className = _this$props.className,\n        tooltip = _this$props.tooltip,\n        children = _this$props.children,\n        classPrefix = _this$props.classPrefix,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"tooltip\", \"children\", \"classPrefix\"]);\n\n    var addPrefix = prefix(classPrefix);\n    var classes = classNames(classPrefix, className, (_classNames = {}, _classNames[addPrefix('tooltip')] = tooltip, _classNames));\n\n    if (tooltip) {\n      return React.createElement(Whisper, {\n        placement: \"topEnd\",\n        speaker: React.createElement(Tooltip, null, children)\n      }, React.createElement(\"span\", _extends({\n        className: classes\n      }, props), React.createElement(Icon, {\n        icon: \"question-circle2\"\n      })));\n    }\n\n    return React.createElement(\"span\", _extends({}, props, {\n      className: classes\n    }), children);\n  };\n\n  return HelpBlock;\n}(React.Component);\n\nHelpBlock.propTypes = {\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  children: PropTypes.node,\n  classPrefix: PropTypes.string\n};\nexport default defaultProps({\n  classPrefix: 'help-block'\n})(HelpBlock);","import HelpBlock from './HelpBlock';\nexport default HelpBlock;","import React, {SyntheticEvent} from \"react\";\nimport {Nav, Form, FormControl, FormGroup, ControlLabel, ButtonToolbar, Button, HelpBlock, Alert} from \"rsuite\"\nimport \"../../sass/setting.scss\"\nimport {\n    NEW_PASSWORD_EMPTY,\n    NEW_PASSWORD_LENGTH_VALID,\n    OLD_PASSWORD_EMPTY,\n    REPEAT_PASSWORD_NOT_MATCH\n} from \"../../constants/language\";\n\nexport interface IProps {\n    onSubmit: (oldPassword: string, newPassword: string, repeat: string) => void\n}\n\nexport default class Setting extends React.Component<IProps, any> {\n    constructor(props: Readonly<IProps>) {\n        super(props);\n        this.state = {\n            oldPassword: \"\",\n            newPassword: \"\",\n            repeat: \"\",\n        }\n    }\n\n    handleSubmit = (e: SyntheticEvent) => {\n        e.persist();\n        this.setState({\n            showError: 0\n        })\n        if (!this.state.oldPassword) {\n            Alert.error(OLD_PASSWORD_EMPTY)\n            return\n        }\n        if (!this.state.newPassword) {\n            Alert.error(NEW_PASSWORD_EMPTY)\n            return;\n        }\n        if (this.state.newPassword.length < 6 || this.state.newPassword.length > 18) {\n            Alert.error(NEW_PASSWORD_LENGTH_VALID)\n            return;\n        }\n        if (this.state.repeat !== this.state.newPassword) {\n            Alert.error(REPEAT_PASSWORD_NOT_MATCH)\n            return;\n        }\n        this.props.onSubmit(this.state.oldPassword, this.state.newPassword, this.state.repeat)\n    }\n\n    render() {\n        return (\n            <div id=\"setting\">\n                <div className=\"header\">\n                    <Nav activeKey=\"changePassword\" appearance=\"subtle\">\n                        <Nav.Item eventKey=\"changePassword\">修改密码</Nav.Item>\n                    </Nav>\n                </div>\n                <div className=\"content\">\n                    <div key=\"changePassword\">\n                        <Form layout=\"horizontal\">\n                            <FormGroup>\n                                <ControlLabel>原始密码</ControlLabel>\n                                <FormControl name=\"name\" type=\"password\" onChange={e => {\n                                    this.setState({\n                                        oldPassword: e.trim()\n                                    })\n                                }}/>\n                            </FormGroup>\n                            <FormGroup>\n                                <ControlLabel>新密码</ControlLabel>\n                                <FormControl name=\"name\" type=\"password\" onChange={e => {\n                                    this.setState({\n                                        newPassword: e.trim()\n                                    })\n                                }}/>\n                                <HelpBlock>新密码长度为6-18位</HelpBlock>\n                            </FormGroup>\n                            <FormGroup>\n                                <ControlLabel>重复密码</ControlLabel>\n                                <FormControl name=\"name\" type=\"password\" onChange={e => {\n                                    this.setState({\n                                        repeat: e.trim()\n                                    })\n                                }}/>\n                            </FormGroup>\n                            <FormGroup>\n                                <ButtonToolbar>\n                                    <Button appearance=\"primary\" onClick={this.handleSubmit.bind(this)}>提交</Button>\n                                </ButtonToolbar>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import {withRouter} from \"react-router\"\nimport Setting from \"../../component/setting\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {changePassword} from \"../../actions/setting\";\n\nconst mapStateToProps = (state: any) => ({\n    errorMsg: state.Setting.ErrorMsg\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    onSubmit: (oldPassword: string, newPassword: string, repeat: string) => dispatch(changePassword(oldPassword, newPassword, repeat))\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Setting))","import {CHANGE_PASSWORD} from \"../constants/actions\";\n\nexport interface SettingAction {\n    type: string,\n    errorMessage: string\n}\n\nexport function changePassword(oldPassword: string, newPassword: string, repeat: string) {\n    return {\n        type: CHANGE_PASSWORD,\n        oldPassword,\n        newPassword,\n        repeat,\n    }\n}\n"],"sourceRoot":""}