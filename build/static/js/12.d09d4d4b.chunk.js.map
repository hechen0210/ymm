{"version":3,"sources":["actions/library.ts","component/library-other/index.tsx","container/library/other.ts"],"names":["getListAction","libType","title","page","pageSize","type","GET_LIB_LIST","modifyAction","formValue","MODIFY_LIB","updateAction","UPDATE_LIB","delAction","id","DEL_LIB","syncAction","SYNC_LIB","selectAction","info","SELECT_LIB","LibraryOther","props","state","searchTile","upload","loading","this","getList","Column","Table","HeaderCell","Cell","Pagination","className","Uploader","onUpload","value","setState","onSuccess","response","file","code","Alert","success","message","error","headers","getCookie","action","DOMAIN","UPLOAD","data","fileListVisible","disabled","Button","color","Icon","icon","onClick","onSync","Divider","list","style","marginLeft","marginRight","autoHeight","rowHeight","width","align","verticalAlign","fixed","dataKey","flexGrow","rowData","href","url","target","height","src","alt","name","datakey","role","onDel","total","activePage","displayLength","renderLengthMenu","onChangePage","React","Component","withRouter","connect","selected","dispatch","onUpdate","onSelect"],"mappings":"uHAAA,uNAYA,SAASA,EAAcC,EAAiBC,EAAeC,EAAcC,GACjE,MAAO,CACHC,KAAMC,IACNL,UACAC,QACAC,OACAC,YAIR,SAASG,EAAaC,GAClB,MAAO,CACHH,KAAMI,IACND,aAIR,SAASE,EAAaF,GAClB,MAAO,CACHH,KAAMM,IACNH,aAIR,SAASI,EAAUC,EAAYZ,GAC3B,MAAO,CACHI,KAAMS,IACND,GAAIA,EACJZ,WAIR,SAASc,EAAWd,GAChB,MAAO,CACHI,KAAMW,IACNf,WAIR,SAASgB,EAAaC,GAClB,MAAO,CACHb,KAAMc,IACND,U,0MCrCaE,E,YACjB,WAAYC,GAA0B,IAAD,8BACjC,4CAAMA,KACDC,MAAQ,CACTnB,KAAM,EACNoB,WAAY,GACZC,QAAQ,EACRC,SAAS,GANoB,E,iFAWjCC,KAAKL,MAAMM,QAAQ,QAAS,GAAI,EAAG,M,+BAG7B,IAAD,OACEC,EAAwCC,IAAxCD,OAAQE,EAAgCD,IAAhCC,WAAYC,EAAoBF,IAApBE,KAAMC,EAAcH,IAAdG,WAiBjC,OACI,yBAAKnB,GAAG,QACJ,yBAAKoB,UAAU,UACX,6BACI,kBAACC,EAAA,EAAD,CAAUD,UAAU,SACVE,SAAU,SAAAC,GACN,EAAKC,SAAS,CACVb,QAAQ,EACRC,SAAS,KAGjBa,UAAW,SAACC,EAAeC,GACD,MAAlBD,EAASE,MACTC,IAAMC,QAAQJ,EAASK,SACvB,EAAKvB,MAAMM,QAAQ,QAAS,GAAI,EAAG,KAEnCe,IAAMG,MAAMN,EAASK,SAEzB,EAAKP,SAAS,CACVb,QAAQ,EACRC,SAAS,KAGjBqB,QAAS,CACL,cAAiB,UAAYC,YAAU,WAAa,YAAc,GAAKA,YAAU,UAErFC,OAAQC,IAASC,IACjBC,KAAM,CAAC,KAAQ,SACfC,iBAAiB,EACjBC,SAAU3B,KAAKJ,MAAME,QAE3B,kBAAC8B,EAAA,EAAD,CAAQC,MAAM,SAAS9B,QAASC,KAAKJ,MAAMG,SACvC,kBAAC+B,EAAA,EAAD,CAAMC,KAAK,SADf,8BAIJ,kBAACH,EAAA,EAAD,CAAQC,MAAM,QAAQG,QAAS,kBAAM,EAAKrC,MAAMsC,OAAO,WACnD,kBAACH,EAAA,EAAD,CAAMC,KAAK,WADf,2CAKR,kBAACG,EAAA,EAAD,MACA,kBAAC/B,EAAA,EAAD,CAAOJ,SAAS,EAAO0B,KAAMzB,KAAKL,MAAMwC,KAAMC,MAAO,CAACC,WAAY,GAAIC,YAAa,IAC5EC,YAAY,EAAMC,UAAW,IAChC,kBAACtC,EAAD,CAAQuC,MAAO,GAAIC,MAAM,SAASC,cAAc,SAASC,OAAK,GAC1D,kBAACxC,EAAD,WACA,kBAACC,EAAD,CAAMwC,QAAQ,QAElB,kBAAC3C,EAAD,CAAQ4C,SAAU,EAAGJ,MAAM,SAASC,cAAc,UAC9C,kBAACvC,EAAD,iCACA,kBAACC,EAAD,CAAMwC,QAAQ,UAElB,kBAAC3C,EAAD,CAAQ4C,SAAU,EAAGJ,MAAM,SAASC,cAAc,UAC9C,kBAACvC,EAAD,qBACA,mBA5DA,SAAC,GAAuC,IAAtC2C,EAAqC,EAArCA,QAAqBpD,GAAgB,EAA5BkD,QAA4B,sCACnD,OACI,kBAACxC,EAASV,EACN,uBAAGqD,KAAMD,EAAQE,IAAKC,OAAO,UAAS,yBAAKC,OAAQ,GAAIC,IAAKL,EAAQE,IAAKI,IAAKN,EAAQO,WAyDlF,CAASC,QAAQ,SAErB,kBAACrD,EAAD,CAAQ4C,SAAU,EAAGJ,MAAM,SAASC,cAAc,UAC9C,kBAACvC,EAAD,iCACA,kBAACC,EAAD,CAAMwC,QAAQ,gBAElB,kBAAC3C,EAAD,CAAQ4C,SAAU,EAAGJ,MAAM,SAASC,cAAc,UAC9C,kBAACvC,EAAD,MACA,mBA7EG,SAAC,GAAuC,IAAtC2C,EAAqC,EAArCA,QAAqBpD,GAAgB,EAA5BkD,QAA4B,sCACtD,OACI,kBAACxC,EAAD,iBAAUV,EAAV,CAAiBY,UAAU,eACvB,uBAAGiD,KAAK,SAASxB,QAAS,WACtB,EAAKrC,MAAM8D,MAAMV,EAAQ5D,GAAI,WADjC,mBA0EI,CAAY0D,QAAQ,SAIxB7C,KAAKL,MAAM+D,MAAQ,EAAI,kBAACpD,EAAD,CACnBqD,WAAY3D,KAAKJ,MAAMnB,KACvBmF,cAAe,GACfC,iBAAkB,WACd,MAAO,IAEXH,MAAO1D,KAAKL,MAAM+D,MAClBI,aAAc,SAAArF,GACV,EAAKkB,MAAMM,QAAQ,QAAS,GAAI,EAAG,IACnC,EAAKU,SAAS,CACVlC,KAAMA,OAGb,Q,GA/GiBsF,IAAMC,W,SCGjCC,sBAAWC,aAdF,SAACtE,GAAD,MAAiB,CACrCuC,KAAMvC,EAAMF,aAAayC,KACzBuB,MAAO9D,EAAMF,aAAagE,MAC1BS,SAAUvE,EAAMF,aAAaP,OAGN,SAACiF,GAAD,MAAyB,CAChDnE,QAAS,SAACtB,EAAcH,EAAeC,EAAcC,GAA5C,OAAiE0F,EAAS9F,YAAcK,EAAMH,EAAOC,EAAMC,KACpH2F,SAAU,SAACvF,GAAD,OAAoBsF,EAASpF,YAAaF,KACpDwF,SAAU,SAACnF,GAAD,OAAgBiF,EAAS7E,YAAaJ,KAChDsE,MAAO,SAACtE,EAAYR,GAAb,OAA8ByF,EAASlF,YAAUC,EAAIR,KAC5DsD,OAAO,SAACtD,GAAD,OAAeyF,EAAS/E,YAAWV,QAGpBuF,CAA6CxE","file":"static/js/12.d09d4d4b.chunk.js","sourcesContent":["import {DEL_LIB, GET_LIB_LIST, MODIFY_LIB, SELECT_LIB, SYNC_LIB, UPDATE_LIB} from \"../constants/actions\";\n\nexport interface library {\n    id: number\n    type: string\n    list: any\n    total: number\n    formValue: any\n    info: any\n    libType: string\n}\n\nfunction getListAction(libType: string, title: string, page: number, pageSize: number) {\n    return {\n        type: GET_LIB_LIST,\n        libType,\n        title,\n        page,\n        pageSize\n    }\n}\n\nfunction modifyAction(formValue: any) {\n    return {\n        type: MODIFY_LIB,\n        formValue\n    }\n}\n\nfunction updateAction(formValue: any) {\n    return {\n        type: UPDATE_LIB,\n        formValue\n    }\n}\n\nfunction delAction(id: number, libType: string) {\n    return {\n        type: DEL_LIB,\n        id: id,\n        libType\n    }\n}\n\nfunction syncAction(libType: string) {\n    return {\n        type: SYNC_LIB,\n        libType\n    }\n}\n\nfunction selectAction(info: any) {\n    return {\n        type: SELECT_LIB,\n        info\n    }\n}\n\nexport {\n    getListAction,\n    modifyAction,\n    updateAction,\n    delAction,\n    selectAction,\n    syncAction\n}","import React from \"react\";\nimport {Alert, Button, Divider, Icon, Table, Uploader} from \"rsuite\";\nimport \"../../sass/library.scss\"\nimport {DOMAIN, UPLOAD} from \"../../constants/api\";\nimport {getCookie} from \"../../utils/cookie\";\n\nexport interface IProps {\n    list: any\n    total: number\n    selected: any\n    getList: (type: string, title: string, page: number, pageSize: number) => void\n    onDel: (id: number, type: string) => void\n    onUpdate: (formValue: any) => void\n    onSelect: (id: number) => void\n    onSync: (type: string) => void\n}\n\nexport default class LibraryOther extends React.Component<IProps, any> {\n    constructor(props: Readonly<IProps>) {\n        super(props);\n        this.state = {\n            page: 1,\n            searchTile: \"\",\n            upload: false,\n            loading: false\n        }\n    }\n\n    componentDidMount(): void {\n        this.props.getList(\"image\", \"\", 1, 20)\n    }\n\n    render() {\n        const {Column, HeaderCell, Cell, Pagination} = Table;\n        const ActionCell = ({rowData, dataKey, ...props}: any) => {\n            return (\n                <Cell {...props} className=\"link-group\">\n                    <a role=\"button\" onClick={() => {\n                        this.props.onDel(rowData.id, \"image\")\n                    }}>删除</a>\n                </Cell>\n            );\n        };\n        const ImgCell = ({rowData, dataKey, ...props}: any) => {\n            return (\n                <Cell {...props}>\n                    <a href={rowData.url} target=\"_blank\"><img height={54} src={rowData.url} alt={rowData.name}/></a>\n                </Cell>\n            )\n        }\n        return (\n            <div id=\"page\">\n                <div className=\"header\">\n                    <div>\n                        <Uploader className=\"upload\"\n                                  onUpload={value => {\n                                      this.setState({\n                                          upload: true,\n                                          loading: true\n                                      })\n                                  }}\n                                  onSuccess={(response: any, file) => {\n                                      if (response.code === 200) {\n                                          Alert.success(response.message)\n                                          this.props.getList(\"image\", \"\", 1, 20)\n                                      } else {\n                                          Alert.error(response.message)\n                                      }\n                                      this.setState({\n                                          upload: false,\n                                          loading: false\n                                      })\n                                  }}\n                                  headers={{\n                                      'Authorization': 'Bearer ' + getCookie('token') === \"undefined\" ? \"\" : getCookie(\"token\"),\n                                  }}\n                                  action={DOMAIN + UPLOAD}\n                                  data={{\"type\": \"image\"}}\n                                  fileListVisible={false}\n                                  disabled={this.state.upload}\n                        >\n                            <Button color=\"orange\" loading={this.state.loading}>\n                                <Icon icon=\"plus\"/> 新增素材\n                            </Button>\n                        </Uploader>\n                        <Button color=\"green\" onClick={() => this.props.onSync(\"image\")}>\n                            <Icon icon=\"repeat\"/> 获取已有素材\n                        </Button>\n                    </div>\n                </div>\n                <Divider/>\n                <Table loading={false} data={this.props.list} style={{marginLeft: 25, marginRight: 25}}\n                       autoHeight={true} rowHeight={80}>\n                    <Column width={50} align=\"center\" verticalAlign=\"middle\" fixed>\n                        <HeaderCell>ID</HeaderCell>\n                        <Cell dataKey=\"id\"/>\n                    </Column>\n                    <Column flexGrow={3} align=\"center\" verticalAlign=\"middle\">\n                        <HeaderCell>图片名称</HeaderCell>\n                        <Cell dataKey=\"name\"/>\n                    </Column>\n                    <Column flexGrow={6} align=\"center\" verticalAlign=\"middle\">\n                        <HeaderCell>图片</HeaderCell>\n                        <ImgCell datakey=\"img\"/>\n                    </Column>\n                    <Column flexGrow={3} align=\"center\" verticalAlign=\"middle\">\n                        <HeaderCell>创建时间</HeaderCell>\n                        <Cell dataKey=\"created_at\"/>\n                    </Column>\n                    <Column flexGrow={6} align=\"center\" verticalAlign=\"middle\">\n                        <HeaderCell></HeaderCell>\n                        <ActionCell dataKey=\"id\"/>\n                    </Column>\n                </Table>\n                {\n                    this.props.total > 0 ? <Pagination\n                        activePage={this.state.page}\n                        displayLength={20}\n                        renderLengthMenu={() => {\n                            return \"\"\n                        }}\n                        total={this.props.total}\n                        onChangePage={page => {\n                            this.props.getList(\"image\", \"\", 1, 20)\n                            this.setState({\n                                page: page\n                            })\n                        }}\n                    /> : \"\"\n                }\n            </div>\n        )\n    }\n}","import {withRouter} from \"react-router\"\nimport {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\nimport LibraryOther from \"../../component/library-other\";\nimport {delAction, getListAction, selectAction, syncAction, updateAction} from \"../../actions/library\";\n\nconst mapStateToProps = (state: any) => ({\n    list: state.LibraryOther.list,\n    total: state.LibraryOther.total,\n    selected: state.LibraryOther.id\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    getList: (type: string, title: string, page: number, pageSize: number) => dispatch(getListAction(type, title, page, pageSize)),\n    onUpdate: (formValue: any) => dispatch(updateAction(formValue)),\n    onSelect: (id: number) => dispatch(selectAction(id)),\n    onDel: (id: number, type: string) => dispatch(delAction(id, type)),\n    onSync:(type:string)=>dispatch(syncAction(type))\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LibraryOther))"],"sourceRoot":""}