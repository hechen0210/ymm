{"version":3,"sources":["actions/area.ts","actions/brand.ts","actions/type.ts","component/shop/edit.tsx","component/shop/index.tsx","container/shop/index.tsx","actions/city.ts","actions/shop.ts"],"names":["getListAction","page","pageSize","type","GET_AREA_LIST","updateAction","id","name","editType","UPDATE_AREA","deleteAction","DELETE_AREA","modifyAction","formValue","MODIFY_AREA","getAreaAll","ALL_AREA","GET_BRAND_LIST","UPDATE_BRAND","DELETE_BRAND","MODIFY_BRAND","getBrandAll","ALL_BRAND","GET_TYPE_LIST","UPDATE_TYPE","DELETE_TYPE","MODIFY_TYPE","getTypeAll","ALL_TYPE","Edit","handleFrom","value","props","setState","onModify","handleUpdate","area_id","brand_id","type_id","province","city","mark","onUpdate","Alert","error","prevProps","prevState","snapshot","show","this","getArea","getBrand","getType","getProvince","getCity","Drawer","onHide","onClose","size","Header","Title","title","Body","Form","fluid","FormGroup","ControlLabel","SelectPicker","data","areaList","defaultValue","area","block","cleanable","onChange","e","brandList","brand","typeList","FormControl","Uploader","console","log","action","Footer","Button","onClick","appearance","React","Component","Shop","add","close","modify","setTimeout","initState","state","Column","Table","HeaderCell","Cell","Pagination","color","Icon","icon","Divider","loading","list","style","marginLeft","marginRight","width","align","fixed","dataKey","flexGrow","rowData","className","vertical","lengthMenu","label","activePage","displayLength","total","renderTotal","withRouter","connect","Area","Brand","ShopType","Province","City","dispatch","GET_PROVINCE_LIST","provinceId","GET_CITY_LIST","getList","GET_SHOP_LIST","UPDATE_SHOP","MODIFY_SHOP"],"mappings":"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","file":"static/js/10.9b7410fa.chunk.js","sourcesContent":["import {ALL_AREA, DELETE_AREA, GET_AREA_LIST, MODIFY_AREA, UPDATE_AREA} from \"../constants/actions\";\n\nexport interface area {\n    type: string\n    list: any,\n    total: number,\n    update: boolean,\n    del: boolean,\n    formValue: any\n}\n\n\nfunction getListAction(page: number, pageSize: number) {\n    return {\n        type: GET_AREA_LIST,\n        page,\n        pageSize,\n    }\n}\n\nfunction updateAction(id: number, name: string, editType: string) {\n    return {\n        type: UPDATE_AREA,\n        id,\n        name,\n        editType,\n    }\n}\n\nfunction deleteAction(id: number, editType: string) {\n    return {\n        type: DELETE_AREA,\n        id,\n        editType,\n    }\n}\n\nfunction modifyAction(formValue: any) {\n    return {\n        type: MODIFY_AREA,\n        formValue\n    }\n}\n\nfunction getAreaAll() {\n    return {\n        type: ALL_AREA\n    }\n}\n\nexport {\n    getListAction,\n    updateAction,\n    deleteAction,\n    modifyAction,\n    getAreaAll,\n}","import {ALL_BRAND, DELETE_BRAND, GET_BRAND_LIST, MODIFY_BRAND, UPDATE_BRAND} from \"../constants/actions\";\n\nexport interface brand {\n    type: string\n    list: any,\n    total: number,\n    update: boolean,\n    del: boolean,\n    formValue: any\n}\n\n\nfunction getListAction(page: number, pageSize: number) {\n    return {\n        type: GET_BRAND_LIST,\n        page,\n        pageSize,\n    }\n}\n\nfunction updateAction(id: number, name: string, editType: string) {\n    return {\n        type: UPDATE_BRAND,\n        id,\n        name,\n        editType,\n    }\n}\n\nfunction deleteAction(id: number, editType: string) {\n    return {\n        type: DELETE_BRAND,\n        id,\n        editType,\n    }\n}\n\nfunction modifyAction(formValue: any) {\n    return {\n        type: MODIFY_BRAND,\n        formValue\n    }\n}\n\nfunction getBrandAll() {\n    return {\n        type: ALL_BRAND\n    }\n}\n\nexport {\n    getListAction,\n    updateAction,\n    deleteAction,\n    modifyAction,\n    getBrandAll\n}","import {ALL_TYPE, DELETE_TYPE, GET_TYPE_LIST, MODIFY_TYPE, UPDATE_TYPE} from \"../constants/actions\";\n\nexport interface type {\n    type: string\n    list: any,\n    total: number,\n    update: boolean,\n    del: boolean,\n    formValue: any\n}\n\n\nfunction getListAction(page: number, pageSize: number) {\n    return {\n        type: GET_TYPE_LIST,\n        page,\n        pageSize,\n    }\n}\n\nfunction updateAction(id: number, name: string, editType: string) {\n    return {\n        type: UPDATE_TYPE,\n        id,\n        name,\n        editType,\n    }\n}\n\nfunction deleteAction(id: number, editType: string) {\n    return {\n        type: DELETE_TYPE,\n        id,\n        editType,\n    }\n}\n\nfunction modifyAction(formValue: any) {\n    return {\n        type: MODIFY_TYPE,\n        formValue\n    }\n}\n\nfunction getTypeAll() {\n    return {\n        type: ALL_TYPE\n    }\n}\n\nexport {\n    getListAction,\n    updateAction,\n    deleteAction,\n    modifyAction,\n    getTypeAll\n}","import React from \"react\";\nimport {\n    Drawer,\n    Button,\n    FormGroup,\n    ControlLabel,\n    FormControl,\n    Form,\n    SelectPicker,\n    Uploader, Alert\n} from \"rsuite\";\n\nexport interface IProps {\n    show: boolean\n    type: string\n    title: string\n    formValue: any\n    areaList: any\n    brandList: any\n    typeList: any\n    province: any\n    city: any\n    getArea: () => void,\n    getBrand: () => void,\n    getType: () => void,\n    getProvince: () => void,\n    getCity: (provinceId: number) => void,\n    onUpdate: (formValue: any) => void\n    onModify: (formValue: any) => void\n    onClose: () => void\n}\n\nexport default class Edit extends React.Component<IProps, any> {\n    // constructor(props: Readonly<IProps>) {\n    //     super(props);\n    // }\n\n    componentDidUpdate(prevProps: Readonly<IProps>, prevState: Readonly<any>, snapshot?: any): void {\n        if (!prevProps.show && this.props.show) {\n            this.props.getArea()\n            this.props.getBrand()\n            this.props.getType()\n            this.props.getProvince()\n            if (this.props.formValue.id > 0) {\n                this.props.getCity(this.props.formValue.province)\n            }\n        }\n    }\n\n    handleFrom = (name: string, value: string) => {\n        let formValue = this.props.formValue\n        formValue[name] = value\n        this.setState({\n            formValue: formValue\n        })\n        this.props.onModify(formValue)\n    }\n\n    handleUpdate = () => {\n        if (this.props.formValue.area_id === 0) {\n            Alert.error(\"区域不能为空\")\n            return\n        }\n        if (this.props.formValue.brand_id === 0) {\n            Alert.error(\"品牌不能为空\")\n            return\n        }\n        if (this.props.formValue.type_id === 0) {\n            Alert.error(\"性质不能为空\")\n            return\n        }\n        if (this.props.formValue.province === 0) {\n            Alert.error(\"省份不能为空\")\n            return\n        }\n        if (this.props.formValue.city === 0) {\n            Alert.error(\"城市不能为空\")\n            return\n        }\n        if (this.props.formValue.mark === \"\") {\n            Alert.error(\"门店编码不能为空\")\n            return;\n        }\n        if (this.props.formValue.name === \"\") {\n            Alert.error(\"门店名称不能为空\")\n            return;\n        }\n        this.props.onUpdate(this.props.formValue)\n    }\n\n    render() {\n        return (\n            <Drawer\n                show={this.props.show}\n                onHide={this.props.onClose}\n                size=\"xs\"\n            >\n                <Drawer.Header>\n                    <Drawer.Title>{this.props.title}</Drawer.Title>\n                </Drawer.Header>\n                <Drawer.Body>\n                    <Form fluid>\n                        <FormGroup>\n                            <ControlLabel>区域</ControlLabel>\n                            <SelectPicker\n                                data={this.props.areaList}\n                                defaultValue={this.props.formValue.area}\n                                block={true} cleanable={false}\n                                onChange={(e) => {\n                                    this.handleFrom(\"area_id\", e)\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <ControlLabel>品牌</ControlLabel>\n                            <SelectPicker\n                                data={this.props.brandList}\n                                defaultValue={this.props.formValue.brand}\n                                block={true} cleanable={false}\n                                onChange={(e) => {\n                                    this.handleFrom(\"brand_id\", e)\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <ControlLabel>性质</ControlLabel>\n                            <SelectPicker\n                                data={this.props.typeList}\n                                defaultValue={this.props.formValue.type}\n                                block={true} cleanable={false}\n                                onChange={(e) => {\n                                    this.handleFrom(\"type_id\", e)\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <ControlLabel>省份</ControlLabel>\n                            <SelectPicker\n                                data={this.props.province}\n                                defaultValue={this.props.formValue.province}\n                                block={true} cleanable={false}\n                                onChange={(e) => {\n                                    this.handleFrom(\"province\", e)\n                                }}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <ControlLabel>城市</ControlLabel>\n                            <SelectPicker\n                                data={this.props.city}\n                                defaultValue={this.props.formValue.city}\n                                block={true} cleanable={false}\n                                onChange={(e) => {\n                                    this.handleFrom(\"city\", e)\n                                }}\n                            />\n                        </FormGroup>\n                        {\n                            this.props.type === \"add\" ? <div>\n                                <FormGroup>\n                                    <ControlLabel>门店编码</ControlLabel>\n                                    <FormControl name=\"mark\" onChange={(e) => {\n                                        this.handleFrom(\"mark\", e)\n                                    }}/>\n                                </FormGroup>\n                                <FormGroup>\n                                    <ControlLabel>门店名称</ControlLabel>\n                                    <FormControl name=\"name\" onChange={(e) => {\n                                        this.handleFrom(\"name\", e)\n                                    }}/>\n                                </FormGroup>\n                            </div> : \"\"\n                        }\n                        {\n                            this.props.type === \"import\" ? <Uploader\n                                onChange={value => {\n                                    console.log(value, '0000');\n                                }}\n                                action=\"//jsonplaceholder.typicode.com/posts/\"\n                            /> : \"\"\n                        }\n                    </Form>\n                </Drawer.Body>\n                <Drawer.Footer>\n                    <Button onClick={this.handleUpdate} appearance=\"primary\">提交</Button>\n                    <Button onClick={this.props.onClose} appearance=\"subtle\">取消</Button>\n                </Drawer.Footer>\n            </Drawer>\n        )\n    }\n}","import React from \"react\";\nimport {Button, Divider, Icon, Table} from \"rsuite\";\nimport \"../../sass/shop.scss\"\nimport Edit from \"./edit\";\nimport {initState} from \"../../reducers/shop\";\n\nexport interface IProps {\n    list: any\n    getList: (page: number, pageSize: number) => void\n    formValue: any\n    areaList: any\n    brandList: any\n    typeList: any\n    province: any\n    city: any\n    getArea: () => void,\n    getBrand: () => void,\n    getType: () => void,\n    getProvince: () => void,\n    getCity: (provinceId: number) => void,\n    onUpdate: (formValue: any) => void\n    onModify: (formValue: any) => void\n}\n\nexport default class Shop extends React.Component<IProps, any> {\n    constructor(props: Readonly<IProps>) {\n        super(props);\n        this.state = {\n            show: false,\n            title: \"新增门店\",\n            type: \"add\"\n        }\n    }\n\n    add = () => {\n        this.setState({\n            show: true\n        })\n    }\n\n    close = () => {\n        let modify = this.props.onModify\n        this.setState({\n            show: false\n        }, function () {\n            setTimeout(function () {\n                modify(initState.formValue)\n            }, 500)\n        })\n    }\n\n    render() {\n        const {Column, HeaderCell, Cell, Pagination} = Table;\n        const ActionCell = ({rowData, dataKey, ...props}: any) => {\n            return (\n                <Cell {...props} className=\"link-group\">\n                    <a>编辑</a>\n                    <Divider vertical/>\n                    <a>删除</a>\n                </Cell>\n            );\n        };\n        return (\n            <div id=\"page\">\n                <Edit\n                    show={this.state.show}\n                    title={this.state.title}\n                    formValue={this.props.formValue}\n                    getArea={this.props.getArea}\n                    areaList={this.props.areaList}\n                    getBrand={this.props.getBrand}\n                    brandList={this.props.brandList}\n                    getType={this.props.getType}\n                    typeList={this.props.typeList}\n                    getProvince={this.props.getProvince}\n                    province={this.props.province}\n                    getCity={this.props.getCity}\n                    city={this.props.city}\n                    onClose={this.close}\n                    onUpdate={this.props.onUpdate} onModify={this.props.onModify}\n                    type={this.state.type}\n                />\n                <Button color=\"orange\" onClick={() => {\n                    this.setState({\n                        show: true\n                    })\n                }}>\n                    <Icon icon=\"plus\"/> 新增门店\n                </Button>\n                <Button color=\"red\" onClick={() => {\n                    this.setState({\n                        show: true,\n                        title: \"导入门店\",\n                        type: \"import\"\n                    })\n                }}>\n                    <Icon icon=\"cloud-upload\"/> 导入列表\n                </Button>\n                <Divider/>\n                <Table loading={false} data={this.props.list} style={{marginLeft: 25, marginRight: 25}}>\n                    <Column width={50} align=\"center\" fixed>\n                        <HeaderCell>Id</HeaderCell>\n                        <Cell dataKey=\"id\"/>\n                    </Column>\n                    <Column flexGrow={3}>\n                        <HeaderCell>门店编码</HeaderCell>\n                        <Cell dataKey=\"firstName\"/>\n                    </Column>\n                    <Column flexGrow={6}>\n                        <HeaderCell>门店名称</HeaderCell>\n                        <Cell dataKey=\"lastName\"/>\n                    </Column>\n                    <Column flexGrow={3}>\n                        <HeaderCell>品牌</HeaderCell>\n                        <Cell dataKey=\"city\"/>\n                    </Column>\n                    <Column flexGrow={3}>\n                        <HeaderCell>性质</HeaderCell>\n                        <Cell dataKey=\"city\"/>\n                    </Column>\n                    <Column flexGrow={3}>\n                        <HeaderCell>区域</HeaderCell>\n                        <Cell dataKey=\"city\"/>\n                    </Column>\n                    <Column flexGrow={3}>\n                        <HeaderCell>省份</HeaderCell>\n                        <Cell dataKey=\"city\"/>\n                    </Column>\n                    <Column flexGrow={3}>\n                        <HeaderCell>城市</HeaderCell>\n                        <Cell dataKey=\"city\"/>\n                    </Column>\n                    <Column flexGrow={6}>\n                        <HeaderCell></HeaderCell>\n                        <ActionCell dataKey=\"id\"/>\n                    </Column>\n                </Table>\n\n                <Pagination\n                    lengthMenu={[\n                        {\n                            value: 10,\n                            label: 10\n                        },\n                        {\n                            value: 20,\n                            label: 20\n                        }\n                    ]}\n                    activePage={1}\n                    displayLength={10}\n                    total={20}\n                    renderTotal={() => {\n                        return <div>总数:0</div>\n                    }}\n                    // onChangePage={this.handleChangePage}\n                    // onChangeLength={this.handleChangeLength}\n                />\n            </div>\n        )\n    }\n}","import {withRouter} from \"react-router\"\nimport Shop from \"../../component/shop\";\nimport {Dispatch} from \"redux\";\nimport {getAreaAll} from \"../../actions/area\";\nimport {getBrandAll} from \"../../actions/brand\";\nimport {getTypeAll} from \"../../actions/type\";\nimport {connect} from \"react-redux\";\nimport {getListAction, modifyAction, updateAction} from \"../../actions/shop\";\nimport {getCity, getProvince} from \"../../actions/city\";\n\nconst mapStateToProps = (state: any) => ({\n    list: state.Shop.list,\n    total: state.Shop.total,\n    formValue: state.Shop.formValue,\n    areaList: state.Area.list,\n    brandList: state.Brand.list,\n    typeList: state.ShopType.list,\n    province: state.Province.list,\n    city: state.City.list,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    getArea: () => dispatch(getAreaAll()),\n    getBrand: () => dispatch(getBrandAll()),\n    getType: () => dispatch(getTypeAll()),\n    getProvince: () => dispatch(getProvince()),\n    getCity: (provinceId: number) => dispatch(getCity(0, 0, provinceId)),\n    getList: (page: number, pageSize: number) => dispatch(getListAction(page, pageSize)),\n    onUpdate: (formValue: any) => dispatch(updateAction(formValue)),\n    onModify: (formValue: any) => dispatch(modifyAction(formValue))\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Shop))","import {GET_CITY_LIST, GET_PROVINCE_LIST} from \"../constants/actions\";\n\nexport interface city {\n    type: string\n    list: any\n    total: number\n}\n\n\nfunction getCity(page = 0, pageSize = 0, provinceId = 0) {\n    return {\n        type: GET_CITY_LIST,\n        page,\n        pageSize,\n        provinceId\n    }\n}\n\nfunction getProvince() {\n    return {\n        type: GET_PROVINCE_LIST\n    }\n}\n\nexport {\n    getCity,\n    getProvince\n}","import {DELETE_SHOP, GET_SHOP_LIST, MODIFY_SHOP, UPDATE_SHOP} from \"../constants/actions\";\n\nexport interface shop {\n    type: string,\n    list: any,\n    total: number,\n    update: boolean,\n    del: boolean,\n    formValue: any\n}\n\nfunction getListAction(page: number, pageSize: number) {\n    return {\n        type: GET_SHOP_LIST,\n        page,\n        pageSize,\n    }\n}\n\nfunction updateAction(formValue: any) {\n    return {\n        type: UPDATE_SHOP,\n        formValue\n    }\n}\n\nfunction deleteAction(id: number, editType: string) {\n    return {\n        type: DELETE_SHOP,\n        id,\n        editType,\n    }\n}\n\nfunction modifyAction(formValue: any) {\n    return {\n        type: MODIFY_SHOP,\n        formValue\n    }\n}\n\n\nexport {\n    getListAction,\n    updateAction,\n    deleteAction,\n    modifyAction,\n}"],"sourceRoot":""}